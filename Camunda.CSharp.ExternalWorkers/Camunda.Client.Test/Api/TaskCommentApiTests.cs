/* 
 * Camunda BPM REST API
 *
 * OpenApi Spec for Camunda BPM REST API.
 *
 * OpenAPI spec version: 7.13.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Camunda.Client.Client;
using Camunda.Client.Api;
using Camunda.Client.Model;

namespace Camunda.Client.Test
{
    /// <summary>
    ///  Class for testing TaskCommentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TaskCommentApiTests
    {
        private TaskCommentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaskCommentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaskCommentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TaskCommentApi
            //Assert.IsInstanceOfType(typeof(TaskCommentApi), instance, "instance is a TaskCommentApi");
        }

        /// <summary>
        /// Test CreateComment
        /// </summary>
        [Test]
        public void CreateCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //CommentDto body = null;
            //var response = instance.CreateComment(id, body);
            //Assert.IsInstanceOf<CommentDto> (response, "response is CommentDto");
        }
        /// <summary>
        /// Test GetComment
        /// </summary>
        [Test]
        public void GetCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string commentId = null;
            //var response = instance.GetComment(id, commentId);
            //Assert.IsInstanceOf<CommentDto> (response, "response is CommentDto");
        }
        /// <summary>
        /// Test GetComments
        /// </summary>
        [Test]
        public void GetCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetComments(id);
            //Assert.IsInstanceOf<List<CommentDto>> (response, "response is List<CommentDto>");
        }
    }

}
